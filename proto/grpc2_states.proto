syntax = "proto3";

package perper.grpc2;

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";
import "grpc2_model.proto";

option csharp_namespace = "Perper.Protocol.Protobuf2";
option go_package = "github.com/obecto/perper/scaler/proto2";
option java_multiple_files = true;
option java_package = "com.obecto.perper.protobuf2";

service FabricStatesDictionary {
  rpc Create(StatesDictionaryCreateRequest) returns (google.protobuf.Empty) {}
  //rpc GetInstanceDictionary () returns () {}

  rpc Operate(StatesDictionaryOperateRequest) returns (StatesDictionaryOperateResponse) {}

  rpc ListItems(StatesDictionaryListItemsRequest) returns (stream StatesDictionaryListItemsResponse) {}

  rpc CountItems(StatesDictionaryCountItemsRequest) returns (StatesDictionaryCountItemsResponse) {}
  rpc QuerySQL(StatesDictionaryQuerySQLRequest) returns (stream StatesDictionaryQuerySQLResponse) {}

  rpc Delete(StatesDictionaryDeleteRequest) returns (google.protobuf.Empty) {}
}

message StatesDictionaryCreateRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;

  perper.grpc2_model.CacheOptions cache_options = 20;
}

/** StatesDictionaryOperateRequest operations guide:
   * Set/Put: set_new_value + new_value
   * SetIfNotChanged/Replace`3: set_new_value + new_value + compare_existing_value + expected_existing_value
   * SetIfNotExisting/PutIfAbsent: set_new_value + new_value + compare_existing_value
   * SetIfExisting/Replace`2: no matching operation
   * Remove: set_new_value
   * RemoveIfNotChanged/Remove`3: set_new_value + compare_existing_value + expected_existing_value
   * Get: get_existing_value
   * GetAndSet: get_existing_value + set_new_value + new_value
   * GetAnd...: get_existing_value + ...
   * ContainsKey: (nothing)
*/
message StatesDictionaryOperateRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;

  google.protobuf.Any key = 2;

  bool get_existing_value = 3;

  bool set_new_value = 4;
  google.protobuf.Any new_value = 5;

  bool compare_existing_value = 6;
  google.protobuf.Any expected_existing_value = 7;
}

message StatesDictionaryOperateResponse {
  bool operation_successful = 1;
  google.protobuf.Any previous_value = 2;
}

message StatesDictionaryCountItemsRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;
}

message StatesDictionaryCountItemsResponse {
  int32 count = 1;
}

message StatesDictionaryListItemsRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;
}

message StatesDictionaryListItemsResponse {
  google.protobuf.Any key = 1;
  google.protobuf.Any value = 2;
}

message StatesDictionaryQuerySQLRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;
  string sql = 2;
}

message StatesDictionaryQuerySQLResponse {
  repeated google.protobuf.Any sql_result_values = 1;
}

message StatesDictionaryDeleteRequest {
  perper.grpc2_model.PerperDictionary dictionary = 1;

  bool keep_cache = 2;
}

service FabricStatesList {
  rpc Create(StatesListCreateRequest) returns (google.protobuf.Empty) {}
  //rpc GetInstanceChildrenList () returns () {}

  rpc Operate(StatesListOperateRequest) returns (StatesListOperateResponse) {}
  rpc Locate(StatesListLocateRequest) returns (StatesListLocateResponse) {}

  rpc ListItems(StatesListListItemsRequest) returns (stream StatesListListItemsResponse) {}

  rpc CountItems(StatesListCountItemsRequest) returns (StatesListCountItemsResponse) {}
  rpc QuerySQL(StatesListQuerySQLRequest) returns (stream StatesListQuerySQLResponse) {}

  rpc Delete(StatesListDeleteRequest) returns (google.protobuf.Empty) {}
}

message StatesListCreateRequest {
  perper.grpc2_model.PerperList list = 1;

  perper.grpc2_model.CacheOptions cache_options = 20;
}

/** StatesListOperateRequest operations guide
   * Get: index/raw_index + get_values + values_count
   * PushFront: at_front + insert_values
   * PushBack: at_back + insert_values
   * PopFront: at_front + values_count + get_values + remove_values
   * PopBack: at_back + values_count + get_values + remove_values
   * Set: index/raw_index + values_count + remove_values + insert_values*1
   * Insert: index/raw_index + insert_values
   * Remove: index/raw_index + values_count + remove_values
*/
message StatesListOperateRequest {
  perper.grpc2_model.PerperList list = 1;

  oneof location {
    bool at_front = 2;
    bool at_back = 3;
    uint32 index = 4;
    uint32 index_backwards = 5;
    int64 raw_index = 10;
    int64 raw_index_backwards = 11;
  }
  uint64 values_count = 6;

  bool get_values = 7;
  bool remove_values = 8;
  repeated google.protobuf.Any insert_values = 9;
}

message StatesListOperateResponse {
  repeated google.protobuf.Any values = 1;
}

message StatesListLocateRequest {
  perper.grpc2_model.PerperList list = 1;

  google.protobuf.Any value = 8;
}

message StatesListLocateResponse {
  bool found = 1;
  uint32 index = 2;
  int64 raw_index = 3;
}

message StatesListCountItemsRequest {
  perper.grpc2_model.PerperList list = 1;
}

message StatesListCountItemsResponse {
  uint32 count = 1;
}

message StatesListListItemsRequest {
  perper.grpc2_model.PerperList list = 1;
}

message StatesListListItemsResponse {
  uint32 index = 1;
  int64 raw_index = 3;
  google.protobuf.Any value = 2;
}

message StatesListQuerySQLRequest {
  perper.grpc2_model.PerperList list = 1;
  string sql = 2;
}

message StatesListQuerySQLResponse {
  repeated google.protobuf.Any sql_result_values = 1;
}

message StatesListDeleteRequest {
  perper.grpc2_model.PerperList list = 1;

  bool keep_cache = 2;
}
