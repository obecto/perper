# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import fabric_pb2 as fabric__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FabricStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Executions = channel.unary_stream(
                '/perper.Fabric/Executions',
                request_serializer=fabric__pb2.ExecutionsRequest.SerializeToString,
                response_deserializer=fabric__pb2.ExecutionsResponse.FromString,
                )
        self.ExecutionFinished = channel.unary_unary(
                '/perper.Fabric/ExecutionFinished',
                request_serializer=fabric__pb2.ExecutionFinishedRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StreamItems = channel.unary_stream(
                '/perper.Fabric/StreamItems',
                request_serializer=fabric__pb2.StreamItemsRequest.SerializeToString,
                response_deserializer=fabric__pb2.StreamItemsResponse.FromString,
                )
        self.ListenerAttached = channel.unary_unary(
                '/perper.Fabric/ListenerAttached',
                request_serializer=fabric__pb2.ListenerAttachedRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class FabricServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Executions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecutionFinished(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListenerAttached(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FabricServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Executions': grpc.unary_stream_rpc_method_handler(
                    servicer.Executions,
                    request_deserializer=fabric__pb2.ExecutionsRequest.FromString,
                    response_serializer=fabric__pb2.ExecutionsResponse.SerializeToString,
            ),
            'ExecutionFinished': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecutionFinished,
                    request_deserializer=fabric__pb2.ExecutionFinishedRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StreamItems': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamItems,
                    request_deserializer=fabric__pb2.StreamItemsRequest.FromString,
                    response_serializer=fabric__pb2.StreamItemsResponse.SerializeToString,
            ),
            'ListenerAttached': grpc.unary_unary_rpc_method_handler(
                    servicer.ListenerAttached,
                    request_deserializer=fabric__pb2.ListenerAttachedRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'perper.Fabric', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Fabric(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Executions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/perper.Fabric/Executions',
            fabric__pb2.ExecutionsRequest.SerializeToString,
            fabric__pb2.ExecutionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecutionFinished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/perper.Fabric/ExecutionFinished',
            fabric__pb2.ExecutionFinishedRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/perper.Fabric/StreamItems',
            fabric__pb2.StreamItemsRequest.SerializeToString,
            fabric__pb2.StreamItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListenerAttached(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/perper.Fabric/ListenerAttached',
            fabric__pb2.ListenerAttachedRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
