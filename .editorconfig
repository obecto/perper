# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

[*]
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true

[*.{kt,kts}]
indent_style = space
indent_size = 4
insert_final_newline = true

[*.xml]
indent_style = space
indent_size = 4
insert_final_newline = true

[*.py]
indent_style = space
indent_size = 4
insert_final_newline = true

[*.csproj]
indent_style = space
indent_size = 2
insert_final_newline = false

[*.cs]
indent_style = space
indent_size = 4
insert_final_newline = false
dotnet_sort_system_directives_first = true

## .NET Coding Conventions ##
# Reference: https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview

[*.cs]
# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = error

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = suggestion

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = warning

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = error

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = error

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = error

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = error

# CA1012: Abstract types should not have constructors
dotnet_diagnostic.CA1012.severity = error

# CA1014: Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1014.severity = none # error

# CA1016: Mark assemblies with AssemblyVersionAttribute
dotnet_diagnostic.CA1016.severity = error

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = error

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = error

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = error

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = error

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = error

# CA1028: Enum storage should be Int32
dotnet_diagnostic.CA1028.severity = error

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = error

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = warning

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = error

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = error

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = error

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = error

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = warning

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = error

# CA1043: Use integral or string argument for indexers
dotnet_diagnostic.CA1043.severity = error

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = error

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = error

# CA1046: Do not overload operator equals on reference types
dotnet_diagnostic.CA1046.severity = error

# CA1047: Do not declare protected members in sealed types
dotnet_diagnostic.CA1047.severity = error

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = error

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning

# CA1052: Static holder types should be sealed
dotnet_diagnostic.CA1052.severity = warning

# CA1053: Static holder types should not have constructors
dotnet_diagnostic.CA1053.severity = error

# CA1054: URI parameters should not be strings
dotnet_diagnostic.CA1054.severity = error

# CA1055: URI return values should not be strings
dotnet_diagnostic.CA1055.severity = error

# CA1056: URI properties should not be strings
dotnet_diagnostic.CA1056.severity = error

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = error

# CA1060: Move P/Invokes to NativeMethods class
dotnet_diagnostic.CA1060.severity = error

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = error

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none # TODO: warning

# CA1063: Implement IDisposable correctly
dotnet_diagnostic.CA1063.severity = error

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = error

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = error

# CA1066: Implement IEquatable when overriding Equals
dotnet_diagnostic.CA1066.severity = error

# CA1067: Override Equals when implementing IEquatable
dotnet_diagnostic.CA1067.severity = error

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = error

# CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = error

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = error

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = error

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = error

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = error

# CA1309: Use ordinal StringComparison
dotnet_diagnostic.CA1309.severity = error

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = warning

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = error

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = error

# CA1417: Do not use OutAttribute on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = error

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = error

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = error

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning

# CA1507: Use nameof in place of string
dotnet_diagnostic.CA1507.severity = error

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = suggestion

# CA1509: Invalid entry in code metrics configuration file
dotnet_diagnostic.CA1509.severity = error

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = error

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = error

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = error

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = error

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = error

# CA1713: Events should not have before or after prefix
dotnet_diagnostic.CA1713.severity = error

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = error

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = error

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = error

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = error

# CA1720: Identifiers should not contain type names
dotnet_diagnostic.CA1720.severity = error

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = error

# CA1724: Type Names Should Not Match Namespaces
dotnet_diagnostic.CA1724.severity = error

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = error

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = error
dotnet_code_quality.CA1801.api_surface = public, internal # TODO: Done to avoid flagging generated Main$ - https://github.com/dotnet/roslyn-analyzers/issues/5184

# CA1802: Use Literals Where Appropriate
dotnet_diagnostic.CA1802.severity = error

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = none

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = error

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = error

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = error

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = error

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = error

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = error

# CA1816: Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1816.severity = error

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = error

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = error

# CA1821: Remove empty finalizers
dotnet_diagnostic.CA1821.severity = error

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = error

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = error

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = error

# CA1826: Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1826.severity = error

# CA1827: Do not use Count/LongCount when Any can be used
dotnet_diagnostic.CA1827.severity = error

# CA1828: Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.CA1828.severity = error

# CA1829: Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1829.severity = error

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = error

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.CA1831.severity = error

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1832.severity = error

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1833.severity = error

# CA1834: Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1834.severity = error

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = error

# CA1836: Prefer IsEmpty over Count when available
dotnet_diagnostic.CA1836.severity = error

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.CA1837.severity = error

# CA1838: Avoid StringBuilder parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = error

# CA1841: Prefer Dictionary Contains methods
dotnet_diagnostic.CA1841.severity = error

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = error

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = error

# CA2007: Do not directly await a Task
dotnet_diagnostic.CA2007.severity = error

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = error

# CA2011: Do not assign property within its setter
dotnet_diagnostic.CA2011.severity = error

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = error

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = error

# CA2014: Do not use stackalloc in loops.
dotnet_diagnostic.CA2014.severity = error

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = error

# CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2016.severity = error

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = error

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = error

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = error

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = error

# CA2153: Avoid handling Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = error

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = error

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = error

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = error

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = error

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = error

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = error

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = error

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = error

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = error

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = error

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = error

# CA2219: Do not raise exceptions in exception clauses
dotnet_diagnostic.CA2219.severity = error

# CA2224: Override equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = error

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = error

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = error

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = warning

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = error

# CA2231: Overload operator equals on overriding ValueType.Equals
dotnet_diagnostic.CA2231.severity = error

# CA2234: Pass System.Uri objects instead of strings
dotnet_diagnostic.CA2234.severity = error

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = error

# CA2237: Mark ISerializable types with SerializableAttribute
dotnet_diagnostic.CA2237.severity = error

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = error

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = error

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = error

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = error

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = error

# CA2246: Do not assign a symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = error

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum.
dotnet_diagnostic.CA2247.severity = error

# CA2248: Provide correct enum argument to Enum.HasFlag
dotnet_diagnostic.CA2248.severity = error

# CA2249: Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.CA2249.severity = error

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = error

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = error

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = error

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = error

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = error

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = error

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = error

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = error

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = error

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = error

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = error

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = error

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = error

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = error

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = error

# CA2350: Ensure DataTable.ReadXml()'s input is trusted
dotnet_diagnostic.CA2350.severity = error

# CA2351: Ensure DataSet.ReadXml()'s input is trusted
dotnet_diagnostic.CA2351.severity = error

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = error

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = error

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack
dotnet_diagnostic.CA2354.severity = error

# CA2355: Unsafe DataSet or DataTable in deserialized object graph
dotnet_diagnostic.CA2355.severity = error

# CA2356: Unsafe DataSet or DataTable in web deserialized object graph
dotnet_diagnostic.CA2356.severity = error

# CA2361: Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = error

# CA2362: Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = error

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = error

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = error

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = error

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = error

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = error

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = error

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = error

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = error

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = error

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = error

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = error

# CA3061: Do not add schema by URL
dotnet_diagnostic.CA3061.severity = error

# CA3075: Insecure DTD Processing
dotnet_diagnostic.CA3075.severity = error

# CA3076: Insecure XSLT Script Execution
dotnet_diagnostic.CA3076.severity = error

# CA3077: Insecure Processing in API Design, XML Document and XML Text Reader
dotnet_diagnostic.CA3077.severity = error

# CA3147: Mark verb handlers with ValidateAntiForgeryToken
dotnet_diagnostic.CA3147.severity = error

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = error

# CA5351 Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = error

# CA5358: Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.CA5358.severity = error

# CA5359 Do not disable certificate validation
dotnet_diagnostic.CA5359.severity = error

# CA5360 Do not call dangerous methods in deserialization
dotnet_diagnostic.CA5360.severity = error

# CA5361: Do not disable Schannel use of strong crypto
dotnet_diagnostic.CA5361.severity = error

# CA5362 Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = error

# CA5363: Do not disable request validation
dotnet_diagnostic.CA5363.severity = error

# CA5364: Do not use deprecated security protocols
dotnet_diagnostic.CA5364.severity = error

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = error

# CA5366: Use XmlReader For DataSet Read XML
dotnet_diagnostic.CA5366.severity = error

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = error

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = error

# CA5369: Use XmlReader for Deserialize
dotnet_diagnostic.CA5369.severity = error

# CA5370: Use XmlReader for validating reader
dotnet_diagnostic.CA5370.severity = error

# CA5371: Use XmlReader for schema read
dotnet_diagnostic.CA5371.severity = error

# CA5372: Use XmlReader for XPathDocument
dotnet_diagnostic.CA5372.severity = error

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = error

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = error

# CA5375: Do not use account shared access signature
dotnet_diagnostic.CA5375.severity = error

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = error

# CA5377: Use container level access policy
dotnet_diagnostic.CA5377.severity = error

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = error

# CA5379: Do not use weak key derivation function algorithm
dotnet_diagnostic.CA5379.severity = error

# CA5380: Do not add certificates to root store
dotnet_diagnostic.CA5380.severity = error

# CA5381: Ensure certificates are not added to root store
dotnet_diagnostic.CA5381.severity = error

# CA5382: Use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5382.severity = error

# CA5383: Ensure use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5383.severity = error

# CA5384: Do not use digital signature algorithm (DSA)
dotnet_diagnostic.CA5384.severity = error

# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.CA5385.severity = error

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = error

# CA5387: Do not use weak key derivation function with insufficient iteration count
dotnet_diagnostic.CA5387.severity = error

# CA5388: Ensure sufficient iteration count when using weak key derivation function
dotnet_diagnostic.CA5388.severity = error

# CA5389: Do not add archive item's path to the target file system path
dotnet_diagnostic.CA5389.severity = error

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = error

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = error

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = error

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = error

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = error

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = error

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = error

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = error

# CA5399: Definitely disable HttpClient certificate revocation list check
dotnet_diagnostic.CA5399.severity = error

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = error

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = error

# CA5402: Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = error

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = error

# IL3000: Avoid accessing Assembly file path when publishing as a single file
dotnet_diagnostic.IL3000.severity = error

# IL3001: Avoid accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3001.severity = error

# IL3002: Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file
dotnet_diagnostic.IL3002.severity = error



### Code Style Rules ###

# IDE0001: Simplify name
dotnet_diagnostic.IDE0001.severity = error

# IDE0002: Simplify member access
dotnet_diagnostic.IDE0002.severity = error

# IDE0003: Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = error

# IDE0004: Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = error

# IDE0005: Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = error

# IDE0007: Use var instead of explicit type
dotnet_diagnostic.IDE0007.severity = error

# IDE0008: Use explicit type instead of var
dotnet_diagnostic.IDE0008.severity = none

# IDE0009: Add this or Me qualification
dotnet_diagnostic.IDE0009.severity = error

# IDE0010: Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = suggestion

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = error

# IDE0016: Use throw expression
dotnet_diagnostic.IDE0016.severity = error

# IDE0017: Use object initializers
dotnet_diagnostic.IDE0017.severity = error

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = error

# IDE0019: Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = error

# IDE0020: Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0020.severity = error

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = error

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = none

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = error

# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = error

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = error

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = error

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = error

# IDE0028: Use collection initializers
dotnet_diagnostic.IDE0028.severity = error

# IDE0029: Use coalesce expression (non-nullable types)
dotnet_diagnostic.IDE0029.severity = error

# IDE0030: Use coalesce expression (nullable types)
dotnet_diagnostic.IDE0030.severity = error

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = error

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = error

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = error

# IDE0034: Simplify default expression
dotnet_diagnostic.IDE0034.severity = error

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = error

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = error

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = error

# IDE0038: Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0038.severity = error

# IDE0039: Use local function instead of lambda
dotnet_diagnostic.IDE0039.severity = error

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = error

# IDE0041: Use is null check
dotnet_diagnostic.IDE0041.severity = error

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = error

# IDE0045: Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = warning

# IDE0046: Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = suggestion

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = error

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = error

# IDE0049: Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = error

# IDE0050: Convert anonymous type to tuple
dotnet_diagnostic.IDE0050.severity = error

# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = error

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = error

# IDE0053: Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = error

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = error

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = suggestion

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = error

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = error

# IDE0058: Remove unused expression value
dotnet_diagnostic.IDE0058.severity = suggestion

# IDE0059: Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = error

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = error

# IDE0062: Make local function static
dotnet_diagnostic.IDE0062.severity = error

# IDE0063: Use simple using statement
dotnet_diagnostic.IDE0063.severity = error

# IDE0064: Make struct fields writable
dotnet_diagnostic.IDE0064.severity = error

# IDE0065: using directive placement
dotnet_diagnostic.IDE0065.severity = error

# IDE0066: Use switch expression
dotnet_diagnostic.IDE0066.severity = error

# IDE0070: Use System.HashCode.Combine
dotnet_diagnostic.IDE0070.severity = error

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = error

# IDE0072: Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = none

# IDE0073: Use file header
dotnet_diagnostic.IDE0073.severity = error

# IDE0074: Use coalesce compound assignment
dotnet_diagnostic.IDE0074.severity = error

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = error

# IDE0076: Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0076.severity = error

# IDE0077: Avoid legacy format target in global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = error

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = error

# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = error

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = error

# IDE0081: Remove ByVal
dotnet_diagnostic.IDE0081.severity = error

# IDE0082: Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = error

# IDE0083: Use pattern matching (not operator)
dotnet_diagnostic.IDE0083.severity = error

# IDE0084: Use pattern matching (IsNot operator)
dotnet_diagnostic.IDE0084.severity = error

# IDE0090: Simplify new expression
dotnet_diagnostic.IDE0090.severity = error

# IDE0100: Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = error

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

# IDE0140: Simplify object creation
dotnet_diagnostic.IDE0140.severity = error

# IDE1005: Use conditional delegate call
dotnet_diagnostic.IDE1005.severity = error

# IDE1006: Naming styles
dotnet_diagnostic.IDE1006.severity = error



### .NET formatting rules

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true
file_header_template = unset

# var preferences
csharp_style_var_elsewhere = true:error
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = true:error
csharp_style_expression_bodied_constructors = when_on_single_line:error
csharp_style_expression_bodied_operators = true:error

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = true
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = true
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Using directive preferences
csharp_using_directive_placement = outside_namespace



### Naming styles

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

#dotnet_naming_style.pascal_case.required_prefix =
#dotnet_naming_style.pascal_case.required_suffix =
#dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
#dotnet_naming_style.begins_with_i.required_suffix =
#dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case
